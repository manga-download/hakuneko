# Microsoft Azure Build Pipeline
# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=azure-devops&tabs=schema

# https://docs.microsoft.com/en-us/azure/devops/pipelines/build/triggers?view=azure-devops
pr: none
trigger: none
schedules:
- cron: '0 0 * * *'
  displayName: 'Nightly Build'
  branches:
    include:
    - master
  always: false

jobs:

- job: Windows
  pool:
    vmImage: 'windows-latest'
  steps:
  - template: nightly-template.yml

- job: Ubuntu
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - script: sudo apt-get -y install dpkg rpm fakeroot lintian
  - template: nightly-template.yml

- job: macOS
  pool:
    vmImage: 'macOS-latest'
  steps:
  - template: nightly-template.yml

- job: Deploy
  dependsOn:
  - Windows
  - Ubuntu
  - macOS
  steps:
    - script: date '+##vso[task.setvariable variable=ISODateTime;]%FT%T%Z'
      displayName: 'Generate ISO Date/Time Environment Variable'
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/download-build-artifacts?view=azure-devops
    - task: DownloadBuildArtifacts@0
      displayName: 'Get Build Artifacts'
      inputs:
        buildType: 'current'
        downloadType: 'specific'
        itemPattern: '**'
        artifactName: 'Windows-$(Build.BuildNumber)'
        downloadPath: '$(System.ArtifactsDirectory)'
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/download-pipeline-artifact?view=azure-devops
    # alternative to build artifacts, pipeline artifacts could be used ...
    # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/utility/github-release?view=azure-devops
    - task: GithubRelease@0
      displayName: 'GitHub Release'
      inputs:
        # NOTE: The service connection to GitHub must be configured to use Personal Aaccess Token
        # OAuth regsitered application seems not to work (404 not found when creating release tag)
        gitHubConnection: 'hakuneko-bot@github'
        repositoryName: 'manga-download/hakuneko'
        action: 'create'
        target: '$(Build.SourceVersion)'
        tagSource: 'manual'
        tag: 'nightly-$(Build.BuildNumber)'
        title: 'nightly($(Build.SourceBranchName)) â€¢ $(ISODateTime)'
        releaseNotesSource: 'input'
        releaseNotes: |
          This is an automated repository snapshot build.
          It is untested and not intended for use in production.
        isDraft: false
        isPreRelease: true
        addChangeLog: false
        assets: |
            $(System.ArtifactsDirectory)/*/*.exe
            $(System.ArtifactsDirectory)/*/*.zip
            $(System.ArtifactsDirectory)/*/*.deb
            $(System.ArtifactsDirectory)/*/*.rpm
            $(System.ArtifactsDirectory)/*/*.dmg